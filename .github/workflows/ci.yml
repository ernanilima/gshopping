name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache-dependency-path: '**/go.sum'

      - name: Install dependencies
        run: |
          go mod download
          go mod tidy

      - name: Validate .ciignore
        run: |
          ciignore=$(grep -vf <(go list ./...) ./app/test/.ciignore || echo "")
          if [ -n "$ciignore" ]; then
            echo "Existem pacotes invalidos para serem ignorados:"
            echo "$ciignore"
            exit 1
          fi

      - name: Run tests
        run: |
          failed_tests=$(go list ./... | xargs -n1 go test -coverprofile=coverage.out 2>&1 | grep -E "(FAIL|no test files)" || echo "")
          if [ -n "$failed_tests" ]; then
            echo "Existem pacotes com falhas ou sem testes:"
            echo "$failed_tests"
            exit 1
          fi

      # DEFINIR FUTURAMENTE QUANDO CRIAR TESTES PARA PARA TODOS OS PACOTES
      # - name: Check test coverage
      #   run: |
      #     threshold=98.0
      #     coverage=$(go tool cover -func=coverage.out | grep total | awk '{print $3}')
      #     if (( $(echo "$coverage < $threshold" | bc -l) )); then
      #       echo "Test coverage is below the threshold of $threshold%"
      #       exit 1
      #     fi
