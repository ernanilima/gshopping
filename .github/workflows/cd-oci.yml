name: CD OCI

on:
  workflow_dispatch:
    inputs:
      app_dir:
        description: "Diretorio na VPS"
        default: "/home/ubuntu/api/test-gshopping"
      branch:
        description: "Branch"
        default: "main"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Executar pull na VPS (SSH)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.VPS_PORT }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -euo pipefail
            APP_DIR="${{ inputs.app_dir }}"
            BRANCH="${{ inputs.branch }}"
            REPO_SSH="git@github.com:${{ github.repository }}.git"

            # Configura o SSH local para confiar na chave do GitHub
            mkdir -p ~/.ssh && chmod 700 ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts 2>/dev/null || true
            chmod 644 ~/.ssh/known_hosts

            # Usa a chave privada ja existente
            export GIT_SSH_COMMAND='ssh -i ~/.ssh/id_ed25519 -o IdentitiesOnly=yes -o StrictHostKeyChecking=yes'

            # Cria pasta destino e ajusta permissoes para o usuario atual
            sudo mkdir -p "$APP_DIR"
            sudo chown -R "$USER":"$USER" "$APP_DIR"

            # Clona ou atualiza o repositorio
            if [ ! -d "$APP_DIR/.git" ]; then
              git clone --depth 1 --branch "$BRANCH" "$REPO_SSH" "$APP_DIR"
            else
              cd "$APP_DIR"
              git fetch --all --prune
              git reset --hard "origin/$BRANCH"
            fi

            # Exibe commit atual
            cd "$APP_DIR"
            git log -1 --pretty=format:"Commit: %h%nAuthor: %an%nDate: %ad%nMessage: %s"